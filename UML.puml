@startuml

Local.left>FileManager
Local.>Exportable

Persona --->Empleado

Persona --->Cliente

Ropa..>Talle



class Local {
-nombre: String;
-telefono: String;
-direccion: String;
-altura: int;
-horarios: String;
-caja: Caja;
-ropa: ArrayList<Ropa>;
-empleados: HashSet<Empleado>;
+imprimirInformacionDelLocal();
+obtenerUltimoIdEmpleado();
+agregarEmpleado();
+obtenerUltimoIdCliente();
+agregarCliente();
+obtenerUltimoIdRopa();
+buscarRopaPorId();
+agregarRopaAlStock();
+aumentarStockRopa();
+bajarStockRopa();
+cambiarDisponibilidadEmpleado();
+darDeBajaEmpleado();
+darDeAltaEmpleado();
+buscarIdEmpleado();
}
class Ropa {
-id: int;
-stock: int;
-tipo: String; //remera/pantalon/etc
-talle: Talle;
-precio: float;
-colorRopa: String;
-disponibilidad: boolean;
+darDeBajaRopa();
+darDeAltaRopa();
}
abstract class Persona{
-id: int;
-nombre: String;
-apellido: String;
-dni: String;
}
class Empleado{
-salario: float;
-disponible: boolean;
-horarios: String;
+setDisponible();
+editarApellidoEmpleado();
+editarNombreEmpleado();
+editarSalarioEmpleado();
+editarHorariosEmpleado();
}
class Cliente{
-historialCompras: ArrayList<Compra>;
-compra: Compra;
+agregarAlHistorialDeCompras();
+mostrarHistorial ();

}
class Caja{
-recaudacion: double;
-retirosPorFecha: HashMap<String, Double> ;
-ingresosPorFecha: HashMap<String, Double> ;
+calcularFecha();
+agregarRecaudacion();
+retirarDinero();
}

class Compra {
-ordenDeCompra: String;
-itemsComprados: HashMap<Ropa, Integer>;
-total: double;
-fechaDeCompra: String;
+crearPdf();
+imprimirItemsComprados();
}

enum Talle {
XS,S,M,L,XL,XXL
}

interface Exportable {
+exportar();
}

interface FileManager {
+guardar();
+obtener();
}

exception eEmpleadoNoEncontrado{
}
exception eRopaNoEncontrada{
}
exception eSinStock{
}
exception eSinTalle{
}




@enduml